This documents the logic of the substitution. Shows Z to be clear
1. The single letter distinguishing the various basic types S/D/C/Z
s/@X@/z/g

2. The type REAL COMPLEX and the kind PSB_SPK_ PSB_DPK_
s/@TYPE@/complex/g
s/@FKIND@/psb_dpk_/g

3. If COMPLEX then conjg else if REAL then ""
s/@CONJG@/conjg/g

4. ZERO and ONE constants in the desired type
s/@XZERO@/zzero/g
s/@XONE@/zone/g

5. ZERO and ONE constants in the NORM type, i.e always REAL, matching KIND
s/@RZERO@/dzero/g
s/@RONE@/done/g

6. Names of the basic BLAS routines for the specific type. 
s/@DOT@/zdotc/g
s/@NRM2@/dznrm2/g

7. The "sister" real type, i.e. S,C: S,  D,Z: D
s/@RT@/d/g

8. @IS@ @IE@   
   On a line by their own, they mark the start and end of a
   region that should only appear for types Integer. 
   So: I just deletes those lines, S/D/C/Z delete everything in
   between. 

   @NOTIS@ @NOTIE@   
   On a line by their own, they mark the start and end of a
   region that should only appear for types NOT Integer. 
   So: S/D/C/Z just delete those lines, I deletes everything in
   between. 

9. @CS@ @CE@   
   On a line by their own, they mark the start and end of a
   region that should only appear for Complex types. 
   So: C/Z just delete those lines, I/S/D delete everything in
   between. 

   @NOTCS@ @NOTCE@   
   On a line by their own, they mark the start and end of a
   region that should only appear for types NOT complex. 
   So: I/S/D just delete those lines, C/Z delete everything in
   between. 
   

